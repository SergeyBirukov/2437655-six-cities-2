openapi: 3.0.0
info:
  title: API Six Cities
  version: 1.0.0

paths:
  /offers:
    get:
      tags:
        - Offers
      summary: Get a list of offers
      description: Retrieve a list of offers with optional pagination.
      parameters:
        - name: limit
          in: query
          description: The maximum number of offers to return (optional)
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferResponse'
        400:
          description: Validation Error
        401:
          description: Unauthorized

    post:
      tags:
        - Offers
      summary: Create a new offer
      description: Create a new offer.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfferRequest'
      responses:
        201:
          description: Offer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        400:
          description: Validation Error
        401:
          description: Unauthorized

  /offers/{offerId}:
    parameters:
      - name: offerId
        in: path
        required: true
        description: The ID of the offer to manipulate
        schema:
          type: string
    get:
      tags:
        - Offers
      summary: Get an offer by ID
      description: Retrieve an offer by its unique ID.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        404:
          description: Offer not found
        401:
          description: Unauthorized

    patch:
      tags:
        - Offers
      summary: Update an offer by ID
      description: Update an offer by its unique ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferRequest'
      responses:
        200:
          description: Offer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        404:
          description: Offer not found
        400:
          description: Validation Error
        401:
          description: Unauthorized
        403:
          description: Forbidden

    delete:
      tags:
        - Offers
      summary: Delete an offer by ID
      description: Delete an offer by its unique ID.
      responses:
        204:
          description: Offer deleted successfully
        404:
          description: Offer not found
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /comments/{offerId}:
    get:
      tags:
        - Comments
      summary: Get comments for an offer
      parameters:
        - name: offerId
          in: path
          required: true
          description: The ID of the offer to retrieve comments for
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        404:
          description: Offer not found
        401:
          description: Unauthorized

    post:
      tags:
        - Comments
      summary: Create a new comment for an offer
      parameters:
        - name: offerId
          in: path
          required: true
          description: The ID of the offer to create a comment for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentRequest'
      responses:
        201:
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        400:
          description: Validation Error
        401:
          description: Unauthorized

  /favorite/{offerId}/{status}:
    post:
      tags:
        - Favourites
      summary: Add an offer to favorites
      description: Add an offer to the user's list of favorites.
      parameters:
        - name: offerId
          in: path
          required: true
          description: The ID of the offer to add to favorites
          schema:
            type: string
        - name: status
          in: path
          required: true
          description: The status of the offer in favorites (1 or 0)
          schema:
            type: number
            enum:
              - 1
              - 0
      responses:
        201:
          description: Offer added to favorites successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfferResponse'
        404:
          description: Offer not found
        401:
          description: Unauthorized

  /favorite:
    get:
      tags:
        - Favourites
      summary: Get a list of favorite offers
      description: Retrieve a list of favorite offers with optional pagination.
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavoriteOfferShortResponse'
        400:
          description: Validation Error
        401:
          description: Unauthorized

  /login:
    get:
      tags:
        - Users
      summary: Get the current user
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Unauthorized

    post:
      tags:
        - Users
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/LoginUserRequest'
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        400:
          description: Validation Error

  /logout:
    post:
      tags:
        - Users
      summary: Logout the current user
      responses:
        204:
          description: User logged out successfully
        401:
          description: Unauthorized

  /register:
    post:
      tags:
        - Users
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/CreateUserRequest'
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        400:
          description: Validation Error


tags:
  - name: Offers
    description: Endpoints related to offers.

  - name: Comments
    description: Endpoints related to comments on offers.

  - name: Users
    description: Endpoints related to user management, login, and registration.

  - name: Favourites
    description: Endpoints related to managing favorite offers.

components:
  schemas:
    City:
      type: string
      enum:
        - Paris
        - Cologne
        - Brussels
        - Amsterdam
        - Hamburg
        - Dusseldorf

    HousingType:
      type: string
      enum:
        - apartment
        - house
        - room
        - hotel

    Facilities:
      type: string
      enum:
        - Breakfast
        - Air conditioning
        - Laptop friendly workspace
        - Baby seat
        - Washer
        - Towels
        - Fridge
    UserType:
      type: string
      enum:
        - Regular
        - Pro

    Coordinates:
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
      required:
        - latitude
        - longitude

    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password

    LoginUserResponse:
      type: object
      properties:
        token:
          type: string
        refreshToken:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        avatarUrl:
          type: string
          format: uri
        UserType:
          $ref: '#/components/schemas/UserType'
      required:
        - token
        - refreshToken
        - email
        - name
        - avatarUrl
        - UserType

    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 15
          minLength: 1
        userType:
          $ref: '#/components/schemas/UserType'
        password:
          type: string
          maxLength: 12
          minLength: 6
      required:
        - email
        - name
        - userType
        - password

    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        avatarUrl:
          type: string
          format: uri
        userType:
          $ref: '#/components/schemas/UserType'
      required:
        - id
        - name
        - email
        - avatarUrl
        - userType

    OfferResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        createdAt:
          type: string
          format: date-time
        description:
          type: string
        city:
          $ref: '#/components/schemas/City'
        preview:
          type: string
        photos:
          type: array
          items:
            type: string
        isPremium:
          type: boolean
        favorite:
          type: boolean
        rating:
          type: number
        housingType:
          $ref: '#/components/schemas/HousingType'
        price:
          type: number
        commentsCount:
          type: number
        roomsCount:
          type: number
        guestsCount:
          type: number
        facilities:
          type: array
          items:
            $ref: '#/components/schemas/Facilities'
        host:
          $ref: '#/components/schemas/UserResponse'
        location:
          $ref: '#/components/schemas/Coordinates'
      required:
        - id
        - title
        - createdAt
        - description
        - city
        - preview
        - photos
        - isPremium
        - favorite
        - rating
        - housingType
        - price
        - commentsCount
        - roomsCount
        - guestsCount
        - facilities
        - host
        - location

    FavoriteOfferResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        postDate:
          type: string
          format: date-time
        city:
          $ref: '#/components/schemas/City'
        preview:
          type: string
        isPremium:
          type: boolean
        favorite:
          type: boolean
        rating:
          type: number
        housingType:
          $ref: '#/components/schemas/HousingType'
        price:
          type: number
        commentsCount:
          type: number
      required:
        - id
        - title
        - publicationDate
        - city
        - preview
        - isPremium
        - favorite
        - rating
        - housingType
        - price
        - commentsCount

    UpdateOfferRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 10
          maxLength: 100
        description:
          type: string
          minLength: 20
          maxLength: 1024
        city:
          $ref: '#/components/schemas/City'
        preview:
          type: string
        photos:
          type: array
          items:
            type: string
        isPremium:
          type: boolean
        housingType:
          $ref: '#/components/schemas/HousingType'
        roomsCount:
          type: number
          minimum: 1
          maximum: 8
        guestsCount:
          type: number
          minimum: 1
          maximum: 10
        price:
          type: number
          minimum: 100
          maximum: 100000
        facilities:
          type: array
          items:
            $ref: '#/components/schemas/Facilities'
          minItems: 1
        host:
          type: string
        location:
          $ref: '#/components/schemas/Coordinates'

    CreateOfferRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 10
          maxLength: 100
        description:
          type: string
          minLength: 20
          maxLength: 1024
        city:
          $ref: '#/components/schemas/City'
        preview:
          type: string
        photos:
          type: array
          items:
            type: string
        isPremium:
          type: boolean
        housingType:
          $ref: '#/components/schemas/HousingType'
        roomsCount:
          type: number
          minimum: 1
          maximum: 8
        guestsCount:
          type: number
          minimum: 1
          maximum: 10
        price:
          type: number
          minimum: 100
          maximum: 100000
        facilities:
          type: array
          items:
            $ref: '#/components/schemas/Facilities'
          minItems: 1
        host:
          type: string
        location:
          $ref: '#/components/schemas/Coordinates'
      required:
        - title
        - description
        - city
        - preview
        - photos
        - isPremium
        - housingType
        - roomsCount
        - guestsCount
        - price
        - facilities
        - host
        - location

    CreateCommentRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 5
          maxLength: 1024
        rating:
          type: integer
          minimum: 1
          maximum: 10
      required:
        - text
        - rating

    CommentResponse:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        rating:
          type: number
        createdAt:
          type: string
        authorId:
          $ref: '#/components/schemas/UserResponse'
      required:
        - id
        - text
        - rating
        - createdAt
        - authorId
